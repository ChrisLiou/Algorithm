##########Why return dummy.next? Why don't we start with l3 and return dummy??? Yes we can, but it's a little messy, I don't wanna try###########

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        dummy=ListNode(0)
        l3=dummy
        carry=0
        while l1!=None or l2!=None:
            if l1==None:
                l1_val=0
            else:
                l1_val=l1.val
            if l2==None:
                l2_val=0
            else:
                l2_val=l2.val
            l3.next=ListNode(0)
            l3.next.val=(l1_val+l2_val+carry)%10
            carry=(l1_val+l2_val+carry)//10
            if l1:
                l1=l1.next
            if l2:
                l2=l2.next
            l3=l3.next
        if carry!=0:
            l3.next=ListNode(carry)
                    
        return dummy.next
                        
            
                        
            